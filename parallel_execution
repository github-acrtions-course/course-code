import unittest
from jenkins_helper import JenkinsHelper

class TestJenkinsHelper(unittest.TestCase):
    def setUp(self):
        self.helper = JenkinsHelper()

    def test_get_jenkins_path_org(self):
        self.assertEqual(self.helper.get_jenkins_path_org("some-ogn-prd"), ["ItceFccOsd-Builds", "ItceFccOsd-Ops"])
        self.assertEqual(self.helper.get_jenkins_path_org("some-cav-hom"), ["CreditApproval", "CreditApproval"])
        self.assertEqual(self.helper.get_jenkins_path_org("some-mcm2-prd"), ["debt-capital-markets", "debt-capital-markets"])
        self.assertEqual(self.helper.get_jenkins_path_org("some-unknown-hom"), [])

    def test_get_respo_name(self):
        self.assertEqual(self.helper.get_respo_name("https://github.com/username/repo-name.git"), "reponame")
        self.assertEqual(self.helper.get_respo_name("https://github.com/username/repo-name"), "reponame")

    def test_get_default_run_branch(self):
        self.assertEqual(self.helper.get_default_run_branch("dev"), "hom")
        self.assertEqual(self.helper.get_default_run_branch("prd"), "prd")

    def test_get_jenkins_build_and_run_job_name(self):
        service = {
            "namespace": "some-ogn-prd",
            "env": "prd",
            "repository": "https://github.com/username/repo-name.git",
            "commit_hash": "abc123",
            "image_commit_hash": "abc123",
            "default_branch": "main"
        }
        self.assertEqual(self.helper.get_jenkins_build_and_run_job_name(service), ("ItceFccOsd-Builds/reponame/main", "ItceFccOsd-Ops/reponame-run/prd"))

        service["commit_hash"] = "different_hash"
        self.assertEqual(self.helper.get_jenkins_build_and_run_job_name(service), ("", "ItceFccOsd-Ops/reponame-run/prd"))

if __name__ == '__main__':
    unittest.main()
